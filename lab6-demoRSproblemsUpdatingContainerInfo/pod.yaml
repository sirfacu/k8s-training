#lab6
#the main idea in this laboratory is show the problems using replicaset
# we are going to try to update some parameters in this case image used by the containers and run an apply command

apiVersion: apps/v1 
kind: ReplicaSet   #You can show different kind from kubectl api-resources KIND column
metadata:
  name: replicaset-test #this is the replicaSet name
  labels:
    app: front
spec: #this section configure the specs to the replicaset
  replicas: 3 #Number of replicas that RS should have
  selector:  # Here we configure the owner and match labels to be part of this RS, is like define the owner
    matchLabels: 
      app: pod-label
  #since here we configure the pod's specs
  template:
    metadata: 
      labels:
        app: pod-label #might match with replicaset label created above
    spec:
      containers:
      - name: front1
        image: python:3.7-alpine
        command: ['sh', '-c',  'echo cont1 >> index.html && python -m http.server 8080']
      - name: front2
        image: python:3.7-alpine
        command: ['sh', '-c',  'echo cont2 >> index.html && python -m http.server 8081'] 

#firts time I ran using 3.6-alpine and the second time I used 3.7-alpine
# R/ 